name: R Package Check

on:
  push:
    branches: [ master ]
    tags:
      - 'v*.*.*'
      - 'v*.*.*-*'
  pull_request:
    branches: [ master ]

jobs:
  build_ubuntu:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: docker://ghcr.io/hpdell/hgwr-ubuntu-docker-action:latest
      
  build_fedora:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: docker://ghcr.io/hpdell/hgwr-fedora-docker-action:latest
      
  build_debian:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: docker://ghcr.io/hpdell/hgwr-debian-docker-action:latest
  
  build_macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up R 4.1.1
        uses: r-lib/actions/setup-r@f57f1301a053485946083d7a45022b278929a78a
        with:
          r-version: '4.1.1'
      - name: Install C++ dependencies
        run: |
          brew install gsl openblas boost
          mkdir armadillo
          wget -qO- http://sourceforge.net/projects/arma/files/armadillo-9.900.6.tar.xz | tar -Jxf- --directory=armadillo --strip-components=1
          cmake -B armadillo/build -S armadillo -DCMAKE_INSTALL_PREFIX=/usr/local -DDETECT_HDF5=OFF -DBUILD_SHARED_LIBS=OFF
          cmake --build armadillo/build --config Release
          cmake --install armadillo/build
      - name: Install R dependencies
        run: |
          install.packages(c("devtools", "Rcpp", "RcppArmadillo"), type = "mac.binary")
        shell: Rscript {0}
      - name: CMake build
        run: |
          mkdir build
          cmake -B build -S . -DWITH_R=ON
          cmake --build build --config Release --target hgwrr_rbuild
          ctest --test-dir build -R Test_R_hgwr --output-on-failure
  
  build_windows:
    runs-on: [self-hosted, Windows, X64]
    steps:
      - uses: actions/checkout@v3
      - name: CMake build and check
        run: |
          mkdir build
          cmake -B build -S . -DWITH_R=ON -DBLAS_LIBRARIES="C:/usr/lib/libopenblas.lib" -DLAPACK_LIBRARIES="C:/usr/lib/libopenblas.lib" -DCMAKE_PREFIX_PATH=C:/usr -DR_ROOT="C:/Program Files/R/R-4.1.2/"
          cmake --build build --config Release --target hgwrr_rbuild
          cd build && ctest -R Test_R_hgwr -C Release --output-on-failure
  
  deploy_build:
    if: github.ref_type == 'tag'
    needs: [build_ubuntu, build_fedora, build_debian, build_macos, build_windows]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: docker://ghcr.io/hpdell/hgwr-ubuntu-docker-action:latest
      - id: extract_r_version
        name: Extract R version number
        run: |
          R_DESC_VERSION=`grep "Version" build/hgwrr/DESCRIPTION`
          R_PACKAGE_VERSION=${R_DESC_VERSION:9}
          echo "::set-output name=r_version::${R_PACKAGE_VERSION}"
      - name: Upload R package as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: hgwrr_cran_source
          path: build/hgwrr_${{steps.extract_r_version.outputs.r_version}}.tar.gz
    outputs:
      r_version: ${{steps.extract_r_version.outputs.r_version}}
  
  deploy_github_release:
    if: github.ref_type == 'tag'
    needs: [deploy_build]
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Download R Package
        uses: actions/download-artifact@v3
        with:
          name: hgwrr_cran_source
      - name: Upload to GitHub 
        uses: softprops/action-gh-release@v1
        with:
          files: hgwrr_${{needs.deploy_build.outputs.r_version}}.tar.gz
